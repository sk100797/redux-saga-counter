{"version":3,"sources":["components/Counter.js","components/App.js","reducers/index.js","sagas/index.js","index.js"],"names":["connect","state","value","dispatch","increment","type","decrement","incrementIfOdd","incrementAsync","onClick","App","counter","action","watchIncrementAsync","watchIncrementIfOdd","rootSaga","delay","put","getCountValue","select","takeEvery","all","sagaMiddleware","createSagaMiddleware","store","createStore","counterReducer","composeWithDevTools","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"yMAmCeA,eAdS,SAACC,GACvB,MAAO,CACLC,MAAOD,MAIgB,SAACE,GAC1B,MAAO,CACLC,UAAW,kBAAMD,EAAS,CAAEE,KAAM,eAClCC,UAAW,kBAAMH,EAAS,CAAEE,KAAM,eAClCE,eAAgB,kBAAMJ,EAAS,CAAEE,KAAM,sBACvCG,eAAgB,kBAAML,EAAS,CAAEE,KAAM,wBAG5BL,EAhCC,SAAC,GAMV,IALLE,EAKI,EALJA,MACAE,EAII,EAJJA,UACAE,EAGI,EAHJA,UACAC,EAEI,EAFJA,eACAC,EACI,EADJA,eAEA,OACE,yCACYN,EADZ,UACyB,6BACvB,4BAAQO,QAASL,GAAjB,KAAuC,IACvC,4BAAQK,QAASH,GAAjB,KAHF,IAGyC,6BACvC,4BAAQG,QAASF,GAAjB,oBAJF,IAI6D,6BAC3D,4BAAQE,QAASD,GAAjB,sBALF,IAK+D,iCCJpDE,EARH,WACV,OACE,6BACE,kBAAC,EAAD,QCISC,EAXC,WAAwB,IAAvBV,EAAsB,uDAAd,EAAGW,EAAW,uCACrC,OAAQA,EAAOP,MACb,IAAK,YACH,OAAOJ,EAAQ,EACjB,IAAK,YACH,OAAOA,EAAQ,EACjB,QACE,OAAOA,I,0CCLIO,G,WAOAD,G,WAOAM,G,WAIAC,G,WAIQC,GAtBlB,SAAUP,IAAV,iEACL,OADK,SACCQ,YAAM,KADP,OAEL,OAFK,SAECC,YAAI,CAAEZ,KAAM,cAFb,uCAKA,IAAMa,EAAgB,SAACjB,GAAD,OAAWA,GAEjC,SAAUM,IAAV,iEACc,OADd,SACoBY,YAAOD,GAD3B,iBAEY,IAAM,EAFlB,gBAGH,OAHG,SAGGD,YAAI,CAAEZ,KAAM,cAHf,uCAOA,SAAUQ,IAAV,iEACL,OADK,SACCO,YAAU,kBAAmBZ,GAD9B,uCAIA,SAAUM,IAAV,iEACL,OADK,SACCM,YAAU,mBAAoBb,GAD/B,uCAIQ,SAAUQ,IAAV,iEACb,OADa,SACPM,YAAI,CAACR,IAAuBC,MADrB,uCCbf,IAAMQ,EAAiBC,cAEjBC,EAAQC,sBACZC,EACAC,8BAAoBC,0BAAgBN,KAGtCA,EAAeO,IAAId,GAEnBe,IAASC,OACP,kBAAC,IAAD,CAAUP,MAAOA,GACf,kBAAC,EAAD,OAEFQ,SAASC,eAAe,W","file":"static/js/main.def6717a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Counter = ({\r\n  value,\r\n  increment,\r\n  decrement,\r\n  incrementIfOdd,\r\n  incrementAsync,\r\n}) => {\r\n  return (\r\n    <div>\r\n      Clicked: {value} times <br />\r\n      <button onClick={increment}>+</button>{\" \"}\r\n      <button onClick={decrement}>-</button> <br />\r\n      <button onClick={incrementIfOdd}>Increment if Odd</button> <br />\r\n      <button onClick={incrementAsync}>Increment if Async</button> <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    value: state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    increment: () => dispatch({ type: \"INCREMENT\" }),\r\n    decrement: () => dispatch({ type: \"DECREMENT\" }),\r\n    incrementIfOdd: () => dispatch({ type: \"INCREMENT_IF_ODD\" }),\r\n    incrementAsync: () => dispatch({ type: \"INCREMENT_ASYNC\" }),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\r\n","import React from \"react\";\r\n\r\nimport Counter from \"./Counter\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Counter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const counter = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case \"INCREMENT\":\r\n      return state + 1;\r\n    case \"DECREMENT\":\r\n      return state - 1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default counter;\r\n","import { takeEvery, put, delay, all, select } from \"redux-saga/effects\";\r\n\r\nexport function* incrementAsync() {\r\n  yield delay(1000);\r\n  yield put({ type: \"INCREMENT\" });\r\n}\r\n\r\nexport const getCountValue = (state) => state;\r\n\r\nexport function* incrementIfOdd() {\r\n  const countValue = yield select(getCountValue);\r\n  if (countValue % 2 !== 0) {\r\n    yield put({ type: \"INCREMENT\" });\r\n  }\r\n}\r\n\r\nexport function* watchIncrementAsync() {\r\n  yield takeEvery(\"INCREMENT_ASYNC\", incrementAsync);\r\n}\r\n\r\nexport function* watchIncrementIfOdd() {\r\n  yield takeEvery(\"INCREMENT_IF_ODD\", incrementIfOdd);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([watchIncrementAsync(), watchIncrementIfOdd()]);\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./components/App\";\r\nimport counterReducer from \"./reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"./sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  counterReducer,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}